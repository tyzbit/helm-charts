# Default values for grav.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- How many deployment pods for Grav
replicaCount: 1

grav:
  image:
    # -- Docker image repo for the grav image
    repository: dsavell/grav
    # -- Kubernetes imagePullPolicy for the grav container
    pullPolicy: IfNotPresent
    # -- Docker image tag to deploy for grav, `admin` installs grav with the admin plugin
    tag: "latest"

  # -- Custom PHP parameters
  customPHPini: |-
    upload_max_filesize = 256M
    post_max_size = 256M

  # -- Specify environment variables (in key: "value" notation)
  config: {}

  probes:
    # -- Enable startup, readiness and liveness probes for grav
    enabled: true
    startup:
      # -- Initial delay for the startup probe
      initialDelaySeconds: 10
      # -- Failure threshold
      failureThreshold: 30
      # -- How many seconds between probes
      periodSeconds: 2
      # -- Probe timeout
      timeoutSeconds: 2
    liveness:
      # -- Initial delay for the liveness probe
      initialDelaySeconds: 10
      # -- Failure threshold
      failureThreshold: 30
      # -- How many seconds between probes
      periodSeconds: 2
      # -- Probe timeout
      timeoutSeconds: 2
    readiness:
      # -- Initial delay for the readiness probe
      initialDelaySeconds: 10
      # -- Failure threshold
      failureThreshold: 30
      # -- How many seconds between probes
      periodSeconds: 2
      # -- Probe timeout
      timeoutSeconds: 2

  service:
    # -- Service port for the grav frontend service
    port: 80

  # -- Resource limits for the grav container
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- Specify a specific node to run grav on
  nodeSelector: {}

  # -- Grav pod tolerations
  tolerations: []

  # -- Grav pod affinity
  affinity: {}

# Filebrowser sidecar
filebrowser:
  # -- Enable filebrowser, an app that lets you edit the contents of the data volume via web GUI. Default credentials `admin/admin`
  enabled: false

  image:
    # -- Docker image repo for the filebrowser image
    repository: filebrowser/filebrowser
    # -- Kubernetes imagePullPolicy for the filebrowser container
    pullPolicy: IfNotPresent
    # -- Docker image tag to deploy for filebrowser
    tag: v2

  # -- Arguments for the filebrowser container
  args: ["-p", "8000", "-d", "/db/database.db"]

  # -- What subdomain filebrowser should be available at
  subdomain: files

  service:
    # -- Service port for the filebrowser frontend service
    port: 8000

  # -- Specify a specific node to run filebrowser on
  nodeSelector: {}

  # -- Filebrowser pod tolerations
  tolerations: []

  # -- Filebrowser pod affinity
  affinity: {}

persistence:
  # -- Enable persistence of data (you probably want this)
  enabled: false

  # -- Use an existing PersistentVolumeClaim
  existingClaimName: ""

  # -- Kubernetes StorageClass for the PersistentVolume
  storageClass: ""

  # -- Size to provision for the Persistent Volume
  size: 10Gi

  # -- Persistent Volume access modes
  accessModes:
    - ReadWriteMany

# -- List imagePullSecrets to use when pulling Docker containers
imagePullSecrets: []

# -- Override the release name
nameOverride: ""
# -- Override the full name
fullnameOverride: ""

# -- Annotations to add to the deployment (grav)
deploymentAnnotations: {}
# -- Annotations to add to the statefulset (filebrowser)
statefulSetAnnotations: {}
# -- Annotations for the grav container
podAnnotations: {}

# -- Security context for the grav container
podSecurityContext:
  {}
  # fsGroup: 2000

# -- Security context for all containers in the pod
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Service type for the grav frontend service
  type: ClusterIP

ingress:
  # -- Enable the ingress
  enabled: true

  # -- Class name for the ingress
  className: ""

  # -- Annotations for the ingress
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  hosts:
    - # -- Hostname for the grav site
      host: chart-example.local
      paths:
        - # -- Path to the grav site off of the host
          path: /
          # -- Path type for matching
          pathType: ImplementationSpecific

  # -- Kubernetes TLS secret ( example: `[ secretName: chart-example-tls, hosts: [ chart-example.local ] ]`)
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
