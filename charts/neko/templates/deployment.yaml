apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "neko.name" . }}
  labels:
    {{- include "neko.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "neko.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "neko.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          {{- if ne "" .Values.existingSecret }}
            - secretRef:
                name: {{ .Values.existingSecret }}
          {{- else }}
            - secretRef:
                name: {{ include "neko.name" . }}
          {{- end }}
          {{- if .Values.persistence }}
          volumeMounts:
            {{- range $volume, $volumeConfig := .Values.persistence }}
            - name: {{ $volume }}
              mountPath: {{ $volumeConfig.path }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.env.NEKO_EPR }}
          {{- $start := atoi (regexFind "[0-9]+" .Values.env.NEKO_EPR) -}}
          {{- $end := atoi (trimPrefix "-" (regexFind "-[0-9]+" .Values.env.NEKO_EPR)) -}}
          {{- range $port := untilStep $start $end 1 }}
            - name: udp{{ $port }}
              containerPort: {{ $port }}
              protocol: UDP
          {{- end }}
          {{- end }}
          {{- with .Values.env.NEKO_UDPMUX }}
            - name: udpmux
              containerPort: {{ . }}
              protocol: UDP
          {{- end }}
          {{- with .Values.env.NEKO_TCPMUX }}
            - name: tcpmux
              containerPort: {{ . }}
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.persistence }}
      volumes:
        {{- range $volume, $volumeConfig := .Values.persistence }}
        - name: {{ $volume }}
          persistentVolumeClaim:
            claimName: {{ $volumeConfig.existingClaim }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
